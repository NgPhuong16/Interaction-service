service: interaction-service

custom:
  dotenv:
    exclude:
      - AWS_REGION
      - AWS_ACCESS_KEY_ID
      - AWS_SECRET_ACCESS_KEY

  serverless-offline:
    httpPort: 3003
    lambdaPort: 3004

provider:
  name: aws
  runtime: nodejs22.x
  stage: ${opt:stage, 'dev'}
  region: ${env:AWS_REGION, 'ap-southeast-1'}
  timeout: 30
  memorySize: 256
  environment:

  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - sqs:SendMessage
            - sqs:GetQueueUrl
          Resource: ${env:SQS_QUEUE_ARN}
        - Effect: Allow
          Action:
            - sqs:ReceiveMessage
            - sqs:DeleteMessage
            - sqs:GetQueueAttributes
          Resource: ${env:SQS_QUEUE_ARN}
        - Effect: Allow
          Action:
            - ses:SendEmail
            - ses:SendRawEmail
          Resource: '*'
        - Effect: Allow
          Action:
            - events:PutRule
            - events:PutTargets
            - events:DeleteRule
            - events:RemoveTargets
          Resource: '*'
        - Effect: Allow
          Action:
            - scheduler:CreateSchedule
            - scheduler:UpdateSchedule
            - scheduler:DeleteSchedule
            - scheduler:CreateScheduleGroup
          Resource: '*'

plugins:
  - serverless-offline
  - serverless-dotenv-plugin
  - serverless-plugin-common-excludes
  - serverless-plugin-include-dependencies

package:
  individually: true
  patterns:
    - '!node_modules/.cache/**'
    - '!node_modules/typescript/**'
    - '!node_modules/@types/**'
    - '!test/**'
    - '!.git/**'
    - '!.github/**'
    - '!.vscode/**'
    - '!.env*'
    - '!README.md'
    - '!tsconfig.json'
    - '!jest.config.js'
    - '!.prettierrc'
    - '!.eslintrc.js'

functions:
  mail-provider:
    handler: dist/handlers/mail-provider.handler
    timeout: 30
    events:
      - http: ANY /
      - http: 'ANY /{proxy+}'
    memorySize: 256

  mail-consumer:
    handler: dist/handlers/mail-consumer.handler
    events:
      - sqs:
          arn: ${env:SQS_QUEUE_ARN}
          batchSize: 10
          maximumBatchingWindow: 5
    timeout: 30
    memorySize: 256

  mail-scheduler:
    handler: dist/handlers/mail-scheduler.handler
    timeout: 30
    memorySize: 256

resources:
  Resources:
    SchedulerRole:
      Type: AWS::IAM::Role
      Properties:
        RoleName: ${self:service}-${self:provider.stage}-${self:provider.region}-schedulerRole
        AssumeRolePolicyDocument:
          Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Principal:
                Service: scheduler.amazonaws.com
              Action: sts:AssumeRole
        Policies:
          - PolicyName: LambdaInvokePolicy
            PolicyDocument:
              Version: '2012-10-17'
              Statement:
                - Effect: Allow
                  Action: lambda:InvokeFunction
                  Resource: ${env:LAMBDA_SCHEDULER_ARN}
